41 2 0
38 1
22 1 21 207 1 0 \NUL
Galen Turoci gturoci@ucsc.edu
22 1 42 325 22 0 \NUL
Lab 2: Introduction to Logic with MultiMedia Logic
22 1 62 91 42 0 \NUL
Due 01/26/18
22 1 80 187 60 0 \NUL
Section 01A, Michael Powell
22 1 100 45 80 0 \NUL
Part B
8 91 258 140 209 1 0
8 146 259 195 210 1 0
8 208 253 257 204 1 0
8 258 257 307 208 1 0
7 95 337 144 288 0 1
7 143 340 192 291 0 1
7 202 339 251 290 0 1
7 250 344 299 295 0 1
11 374 338 401 240 0 1
22 84 213 140 193 0 \NUL
Input (8)
22 143 218 199 198 0 \NUL
Input (4)
22 202 211 258 191 0 \NUL
Input (2)
22 261 215 317 195 0 \NUL
Input (1)
22 152 352 183 332 0 \NUL
LED
22 373 244 499 224 0 \NUL
7-segment Display
22 259 355 290 335 0 \NUL
LED
22 211 350 242 330 0 \NUL
LED
22 101 345 132 325 0 \NUL
LED
22 7 160 500 140 0 \NUL
These 4 switches represent the first 4 binary numbers, and when turned on,
22 6 177 505 157 0 \NUL
will create the corresponding hexadecimal number in the 7-segment display.
1 96 312 137 233
1 144 315 192 234
1 203 314 254 228
1 251 319 304 232
1 375 304 137 233
1 375 310 192 234
1 375 316 254 228
1 375 322 304 232
38 2
22 12 48 55 28 0 \NUL
Part C
20 192 284 251 265 0
IN[2]
20 193 325 252 306 0
IN[1]
20 194 366 253 347 0
IN[0]
8 81 299 130 250 1 0
8 81 340 130 291 1 0
8 82 381 131 332 1 0
22 50 284 84 264 0 \NUL
IN[2]
22 50 325 84 305 0 \NUL
IN[1]
22 52 365 86 345 0 \NUL
IN[0]
22 19 84 503 64 0 \NUL
(-IN[2]^-IN[1]^-IN[0])\/(-IN[2]^IN[1]^-IN[0])\/(-IN[2]^IN[1]^IN[0])\/(IN[2]^IN[1]^IN[0])
3 450 164 499 115 1 0
4 638 278 687 229 2 0
19 294 259 353 240 0
IN[1]
3 449 273 498 224 1 0
19 296 404 355 385 0
IN[2]
19 296 433 355 414 0
IN[1]
19 297 459 356 440 0
IN[0]
3 452 433 501 384 1 0
19 293 352 352 333 0
IN[1]
19 295 375 354 356 0
IN[0]
3 456 356 505 307 1 0
7 728 232 777 183 0 1
5 379 167 428 118 0
5 379 202 428 153 0
5 377 129 426 80 0
19 292 115 351 96 0
IN[2]
19 292 151 351 132 0
IN[1]
19 291 187 350 168 0
IN[0]
19 298 234 357 215 0
IN[2]
19 294 280 353 261 0
IN[0]
5 379 290 428 241 0
5 379 251 428 202 0
19 293 325 352 306 0
IN[2]
5 380 339 429 290 0
1 193 274 127 274
1 194 315 127 315
1 195 356 128 356
1 496 139 639 239
1 350 249 450 248
1 495 248 639 248
1 352 394 453 394
1 352 423 453 408
1 353 449 453 422
1 349 342 457 331
1 351 365 457 345
1 502 331 639 258
1 498 408 639 267
1 729 207 684 253
1 348 105 378 104
1 423 104 451 125
1 348 141 380 142
1 425 142 451 139
1 347 177 380 177
1 425 177 451 153
1 354 224 380 226
1 350 270 380 265
1 425 226 450 234
1 425 265 450 262
1 349 315 381 314
1 426 314 457 317
38 3
22 1 21 45 1 0 \NUL
Part D
34 232 122 281 73 0 0
8 56 107 105 58 0 1
8 92 308 141 259 1 0
7 503 107 552 58 0 1
8 92 381 141 332 1 0
35 293 307 342 258 0 1
7 501 167 550 118 0 1
35 288 381 337 332 0 1
3 368 344 417 295 0 0
7 490 344 539 295 0 1
22 4 58 172 38 0 \NUL
Push Button; starts game
22 149 148 358 128 0 \NUL
Generates random 2-bit number
22 434 123 634 103 0 \NUL
Displays random 2-bit number
22 435 303 743 283 0 \NUL
Lights up when the player guesses the number
22 193 401 458 381 0 \NUL
Logic that tests for equivalency between
22 31 319 197 299 0 \NUL
Input switches the player
22 195 425 451 405 0 \NUL
the switches and the number generator
22 30 338 203 318 0 \NUL
uses to guess the number
1 233 82 102 82
1 278 76 504 82
1 278 76 294 268
1 138 283 294 296
1 278 82 502 142
1 278 82 289 342
1 138 356 289 370
1 339 282 369 305
1 334 356 369 333
1 414 319 491 319
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
1
2
2
34
